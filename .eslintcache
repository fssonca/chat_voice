[{"C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\index.tsx":"1","C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\App.tsx":"2","C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\reportWebVitals.ts":"3","C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\store.tsx":"4","C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\components\\MainScreen.tsx":"5"},{"size":500,"mtime":1609541373790,"results":"6","hashOfConfig":"7"},{"size":249,"mtime":1610202417787,"results":"8","hashOfConfig":"7"},{"size":425,"mtime":1609541373790,"results":"9","hashOfConfig":"7"},{"size":749,"mtime":1610201365813,"results":"10","hashOfConfig":"7"},{"size":1644,"mtime":1610239563612,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1qd4pnl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\index.tsx",[],["24","25"],"C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\App.tsx",[],"C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\reportWebVitals.ts",[],"C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\store.tsx",["26"],"import React, { createContext, useReducer, ReactNode } from \"react\";\r\n\r\ninterface IState {}\r\n\r\ninterface IContextProps {\r\n  state: IState;\r\n  dispatch: ({ type, payload }: { type: string; payload?: any }) => void;\r\n}\r\n\r\ntype IAction = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\nconst Store = createContext({} as IContextProps);\r\n\r\nfunction reducer(state: IState, action: IAction): IState {\r\n  return state;\r\n}\r\n\r\nconst initialState: IState = {};\r\n\r\ntype Props = {\r\n  children: JSX.Element;\r\n};\r\n\r\nconst StateProvider = ({ children }: Props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\r\n  );\r\n};\r\n\r\nexport { Store, StateProvider };\r\n","C:\\Users\\FERNANDO\\DEV\\chat_voice\\src\\components\\MainScreen.tsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":44,"nodeType":"33","messageId":"34","endLine":1,"endColumn":53},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]